#--------------------------------------------------------------------------------------------------
# STAGES
#--------------------------------------------------------------------------------------------------
# build:        build docker image
# deploy:       deploy application to environment
# test:         run tests on deployed environment
# posttest:     confirm or rollback
# final:        remove environment / deploy to production

stages:
  - build
  - deploy
  - codeanalyse
  - rollout
  - postrollout

variables:
  HTTP_URL: $CI_COMMIT_REF_SLUG.develop.waterpolo.nevercodealone.de
  RANCHER_PROJECT_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
  TOOLBOX_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG/toolbox:$CI_PIPELINE_ID
  WEB_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG:$CI_PIPELINE_ID
  WEBDRIVER_URL: rancher.waterpolo.nevercodealone.de
  WEBSITE_URL: https://$CI_COMMIT_REF_SLUG.develop.waterpolo.nevercodealone.de


#--------------------------------------------------------------------------------------------------
# JOBS
#--------------------------------------------------------------------------------------------------

# Stage: build

build_development_image:
  stage: build
  image: docker:stable
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
  script:
    - docker build -t $WEB_IMAGE --target webserver --pull .
    - docker push $WEB_IMAGE
  tags:
    - docker-executor
  except:
    - master

build_production_image:
  stage: build
  image: docker:stable
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
  script:
    - docker build -t $WEB_IMAGE --target webserver --pull --build-arg APP_ENV=prod .
    - docker push $WEB_IMAGE
  tags:
    - docker-executor
  only:
    - master

build_toolbox_image:
  stage: build
  image: docker:stable
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
  script:
    - docker build -t $TOOLBOX_IMAGE --target toolbox --pull .
    - docker push $TOOLBOX_IMAGE
  tags:
    - docker-executor

# Stage: deploy

deploy_development_image_to_branch:
  stage: deploy
  image: $TOOLBOX_IMAGE
  before_script:
    - rancher rm --type stack --stop $RANCHER_PROJECT_NAME || true
  script:
    - rancher up -s $RANCHER_PROJECT_NAME -f docker-compose.rancher.yml -d --pull
  tags:
    - docker-executor
  except:
    - master
    - /^prod\/.*/

deploy_production_image_to_stage:
  stage: deploy
  image: $TOOLBOX_IMAGE
  variables:
    HTTP_URL: stage.waterpolo.nevercodealone.de
  before_script:
    - rancher rm --type stack --stop stage-waterpolo-nevercodealone-de ||true
  script:
    - rancher up -s stage-waterpolo-nevercodealone-de -f docker-compose.rancher.yml -d --pull
  tags:
    - docker-executor
  only:
    - master

# Stage: rollout

deploy_production_image_to_prod:
  stage: rollout
  image: $TOOLBOX_IMAGE
  variables:
    HTTP_URL: waterpolo.nevercodealone.de
  script:
    - rancher up -s waterpolo-nevercodealone-de -f docker-compose.rancher.yml -d --pull --prune --upgrade
  tags:
    - docker-executor
  only:
    - master
  when: manual


# Stage: codeanalyse
phpstan_run:
  stage: codeanalyse
  image: $TOOLBOX_IMAGE
  script:
    - /var/www/html/vendor/bin/phpstan analyse src
  tags:
    - docker-executor
  except:
    - master

phpunit_run:
  stage: codeanalyse
  image: $TOOLBOX_IMAGE
  script:
    - /var/www/html/vendor/bin/phpunit --testdox tests
  tags:
    - docker-executor
  except:
    - master

rector_run:
  stage: codeanalyse
  image: $TOOLBOX_IMAGE
  script:
    - /var/www/html/vendor/bin/rector process src --dry-run
  tags:
    - docker-executor
  except:
    - master

confirm_upgrade:
  image: $TOOLBOX_IMAGE
  script:
    - rancher up -s $RANCHER_PROJECT_NAME -f docker-compose.rancher.yml -d $RANCHER_OPTIONS
  after_script:
    - rancher exec -t hi-plan-net/web /bin/bash -c 'rm -rf /var/www/html/var/cache' || true
  tags:
    - docker-executor
  stage: postrollout
  variables:
    RANCHER_OPTIONS: --confirm-upgrade
    RANCHER_PROJECT_NAME: waterpolo-nevercodealone-de
  only:
    - master
  when: manual

rollback_upgrade:
  image: $TOOLBOX_IMAGE
  script:
    - rancher up -s $RANCHER_PROJECT_NAME -f docker-compose.rancher.yml -d $RANCHER_OPTIONS
  tags:
    - docker-executor
  stage: postrollout
  variables:
    RANCHER_OPTIONS: --rollback
    RANCHER_PROJECT_NAME: waterpolo-nevercodealone-de
  only:
    - master
  when: manual

